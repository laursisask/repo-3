name: Publish

# cspell:words ncipollo

on:
  pull_request:
    types: [closed]
    branches:
      - develop
      - beta
      - stable

env:
  NODE_VERSION: 20
  PYTHON_VERSION: 3.9.x

jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged

    steps:
    - uses: actions/checkout@v4

    - name: Install NODE JS
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Install building tools
      run: pip3 install -r ./predeployed/scripts/requirements.txt

    - name: Install project
      run: yarn install

    - name: Determine version
      run: |
        export BRANCH=${GITHUB_REF##*/}
        echo "Branch $BRANCH"
        export VERSION=$(bash ./predeployed/scripts/calculate_version.sh)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Version $VERSION"
        ( test $BRANCH = "stable" && export PRERELEASE=false ) || export PRERELEASE=true
        echo "PRERELEASE=$PRERELEASE" >> $GITHUB_ENV

    - name: Build pip package
      env:
          VERSION: ${{ env.VERSION }}
      run: predeployed/scripts/build_package.sh

    - name: Publish pip package
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: predeployed/scripts/publish_package.sh

    - name: Generate ABI
      env:
        VERSION: ${{ env.VERSION }}
      run: |
        pip install predeployed/dist/*.whl
        ./predeployed/scripts/generate_abi.py > data/marionette-$VERSION-abi.json
        ls data

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ env.VERSION }}
        prerelease: ${{ env.PRERELEASE }}
        artifacts: "data/*-abi.json,predeployed/dist/*"
