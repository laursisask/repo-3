language: node_js
node_js: 10
services:
  - docker
before_install:
- mkdir -p ~/schain_data/data_dir
- mv test/utils/config.json ~/schain_data/
- docker pull skalenetwork/schain:$SCHAIN_VERSION
- docker run -d
  -v ~/schain_data:/schain_data
  -p 2234:2234
  -e SSL_CERT_PATH=None
  -e HTTP_RPC_PORT=2234
  -e DATA_DIR=/schain_data/data_dir
  -e CONFIG_FILE=/schain_data/config.json
  skalenetwork/schain:$SCHAIN_VERSION
install:
- npm install
- truffle compile

jobs:
  include:
    - stage: test
      before_script:
      - npm run lint
      script:
      - truffle test --network skaled
      after_success:
      - npx solidity-coverage
      - cat coverage/lcov.info | npx codecov
    - stage: integration
      install:
      - git clone https://github.com/skalenetwork/filestorage.js.git
      - cd filestorage.js
      - npm install
      - npm link; npm link @skalenetwork/filestorage.js
      before_script:
      - npm run generate
      script:
      - npm run test
    - stage: deploy
      if: branch IN (develop, beta, stable, master)
      script:
        - VERSION=$(BRANCH=$TRAVIS_BRANCH bash ./scripts/calculate_version.sh)
        - echo "Version $VERSION"
        - truffle compile
        - node scripts/deploy.js
      before_deploy:
        # Set up git user name and tag this commit
        - (
          test ! $TRAVIS_TAG &&
          git config --local user.name "skale-travis" &&
          git config --local user.email "$GITHUB_EMAIL" &&
          export TRAVIS_TAG=$VERSION &&
          git tag "$TRAVIS_TAG" &&
          git push https://$GITHUB_OAUTH_TOKEN@github.com/$TRAVIS_REPO_SLUG.git $TRAVIS_TAG
          ) || true
      deploy:
        - provider: releases
          api_key: "$GITHUB_OAUTH_TOKEN"
          skip_cleanup: true
          name: $VERSION @ $(date +'%d.%m.%Y %R')
          file:
            - artifacts.json
          on:
            repo: $TRAVIS_REPO_SLUG
            branch: stable
        - provider: releases
          api_key: "$GITHUB_OAUTH_TOKEN"
          skip_cleanup: true
          prerelease: true
          name: $VERSION @ $(date +'%d.%m.%Y %R')
          file:
            - artifacts.json
          on:
            repo: $TRAVIS_REPO_SLUG
            branch:
              - master
              - develop
              - beta
